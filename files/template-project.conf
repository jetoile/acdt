#!/bin/bash
# ACDT Configuration file for project $project
#
# NOTE: Some values are commented out, but show their default values.
# Lines that begin with "#" are considered comments.
#
# You can use the variables below to define your own variables :
#     - \$project     : The name of your project
#     - \$component   : The component you deploy / rollback
#     - \$environment : The environment you deploy / rollback
#     - \$version     : The release version you deploy / rollback
#     - \$report      : The report generated when you deploy / rollback
#     - \$status      : The status of your deploy / rollback
#
# Have fun!

#  First specify your components and your environments
#####################################################################

# Specify here applicative components bind to your project $project (separate by space)
# For example : webapp scripts web-services
components=
 
# Specify here deployment environments for your project $project (separate by space)
# For example : staging production
environments=


# This section define configuration used for all components
# Variables defined here may be override by components and environments
#####################################################################

# Work dir is a working directory used to process scm and build tasks
# NOTE : At the beginning of process the work_dir is deleted
work_dir=/tmp/acdt/$project/\$component

# Log dir is the applicative logging directory for your project
log_dir=/var/log/apps/$project

# Archives dir is a directory where archives resulting to build task 
# will be stored
# NOTE : To use this variable in build task, she must be defined before
archives_dir=/var/cache/acdt/archives

# Keep archives is the the number of archives stored in archives_dir
# Note : This variable can not be overrided for an environment
keep_archives=5

# Reports dir is a directory where deployment reports will be stored
# NOTE : The variable \$report may be used to reference this report in 'report_task'
reports_dir=/var/cache/acdt/reports

# Keep reports is the number of deployment reports stored in reports_dir
# NOTE : This variable can not be overrided for an environment
keep_reports=20

# Scm task is the task to process checkout / export from your scm
# For example : svn export http://yourcompany/trunk/yourproject \$work_dir --force
# NOTE : The scm task is optional and executed in work_dir
scm_task=

# Build task is a task called after scm task to build source code if necessary.
# The build task is REQUIRED and is executed in work_dir.
# The archive resulting to this build task is renamed with pattern \$project-\$component-\$version and moved in archives_dir 
# For example : 
#     - To get an archive from remote location : wget http://yourcompany:yourarchive
#     - To build a java project with maven : mvn package
#     - To create  simple archive : tar -czf \$archives_dir/\$project-\$component-\$version.tar.gz .
build_task=tar -czf \$project-\$component-\$version.tar.gz .

# Pre-deploy task is the task called before deployment on deploy_servers
# For example : /etc/init.d/tomcat stop
pre_deploy_task=

# Deploy dir is the directory where applicative components will be deployed
# You should use the variable \$version to define unique directories if you unpack archive
deploy_dir=/data/apps/$project/\$component/\$version

# Deploy symlink is the symbolink link create after deployment to point to
# applicative component deployed
deploy_symlink=/data/www/$project/\$component

# Unpack archive is a boolean (true/false) indicating whether the archive should be unpacked
unpack_archive=true

# Deploy servers is a list of servers (separate by space) which applicative component will be deployed
# For example : server1 server2 server3
deploy_servers=

# Dir chown is the owner applied to deploy_dir and log_dir
# For example : www-data:www-data
dir_chown=www-data:www-data

# Dir chmod is the rights applied to deploy_dir and log_dir
# For example : 755
dir_chmod=755

# File chown is the owner applied to all files in deploy_dir and log_dir
# For example : www-data:www-data
file_chown=www-data:www-data

# File chmod is the rights applied to all files in deploy_dir and log_dir
# For example : 644
# Note: For Unix shell scripts (*.sh) chmod is set to 775 by default
file_chmod=644

# Keep releases is the number of releases kept on servers in deploy_dir
keep_releases=3

# Post-deploy task is the task called after deployment on deploy_servers
# For example : /etc/init.d/tomcat start
post_deploy_task=

# Report task is the task called at the end of deployment to notify by email (or other) the deployment result
# For example : mail -s '[$project] - \$action \$status for component \$component' acdt@yourdomain.com < \$report
# Note : The variable \$report may be used to reference this report
report_task=mail -s '[$project] - \$action \$status for component \$component' acdt@yourdomain.com < \$report

# Pre-rollback task is the task called before rollback on deploy_servers
# For example : /etc/init.d/apache2 stop
pre_rollback_task=

# Post-rollback task is the task called after rollback on deploy_servers
# For example : /etc/init.d/apache2 start
post_rollback_task=


# This section is used for specific environments configuration
#####################################################################

# For example, the line below override variable log_dir for staging environment
# staging_log_dir=/var/log/staging
#
# This value will be used for every applicative components in staging environement 
# unless you override this property for specific component. 
# For example : webapp_staging_log_dir=/var/log


# This section is used for specific applicative components configuration
#####################################################################

# For example, the line below override variable deploy_dir for component webapp
# webapp_deploy_dir=/apps/webapp
#
# This value will be used for component webapp for every environments 
# unless you override this property for specific environment. 
# For example : webapp_staging_deploy_dir=/apps/staging/webapp

